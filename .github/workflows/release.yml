name: Release Workflow

on:
  release:
    types: [created, published]
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'

jobs:
  build-and-release:
    runs-on: ubuntu-22.04
    # Ensure the job runs only for the primary event that interests us.
    if: >
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) ||
      (github.event_name == 'release' && github.event.action == 'created')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache Cargo Registry and Build Output
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Build release binary
        run: |
          cargo build --release --verbose
          strip target/release/near-lake
          cp target/release/near-lake near-lake
      - name: Determine UPLOAD_URL
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            RELEASE_RESPONSE=$(curl -s -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME")
            UPLOAD_URL=$(echo "$RELEASE_RESPONSE" | jq -r .upload_url)
            echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV
          else
            echo "UPLOAD_URL=${{ github.event.release.upload_url }}" >> $GITHUB_ENV
          fi
      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./near-lake
          asset_name: near-lake
          asset_content_type: application/octet-stream
